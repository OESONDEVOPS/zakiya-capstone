pipeline {

    environment {
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID') // Use the credentials ID you set in Jenkins
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY') // Use the credentials ID you set in Jenkins
    }
    agent any
    

    stages {
        stage('Hello') {
            steps {
                echo 'my_app'
            }
        }
 
    
        stage('Clone Repo') {
            steps {
                // Clone the source code from the Git repository
                git url: 'https://github.com/OESONDEVOPS/zakiya-capstone.git', branch: 'main' 
            }
        }

        stage('Verify Cloned Files') {
                steps {
                    sh 'ls -la'       // Check for 'docker' or 'Docker' - added -a for hidden files
                    sh 'ls -R'        // List contents of directories recursively
                    sh 'pwd'          // Print current working directory
                }
            }
            stage('Test Docker Access') {
            steps {
                // Verify that the Jenkins agent has the docker command available
                sh 'docker --version'
            }
        }
        stage('Build Docker Image') {
            steps {
                // Build the Docker image using the Dockerfile in the 'Docker' directory
                // -t tags the image, -f specifies the Dockerfile path, . is the build context
                // CORRECTED PATH based on the provided directory structure
                echo 'INSIDE DOCKER BUILD'
                sh 'pwd'
                sh 'ls /var/jenkins_home/workspace/'
                sh 'docker build -t myapp_img  -f /var/jenkins_home/workspace/new_capstone/docker/Dockerfile .'
            }
        }
        stage('Save Docker Image') {
            steps {
                // Save the built Docker image as a tar archive
                // -o specifies the output file name
                sh 'docker save myapp_img -o myapp_img.tar'
            }
        }
        stage('Push to Docker Hub') {
            steps {
                // Log in to Docker Hub using the credentials stored in Jenkins
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'
                }
                // Push the Docker image to Docker Hub
                sh 'docker tag myapp_img zakif/myapp_img:latest' // Replace with your Docker Hub username
                sh 'docker push zakif/myapp_img:latest' // Replace with your Docker Hub username
            }
        }
        
}

    

    post {
        always {
            echo 'This will always run after the stages.'
        }
        success {
            echo 'This will run only if the pipeline is successful.'
        }
        failure {
            echo 'This will run only if the pipeline fails.'
        }
    }
}
   
